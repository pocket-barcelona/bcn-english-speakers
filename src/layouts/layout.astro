---
import { SEO, type Props as SEOProps } from "astro-seo";
import Footer from "../components/page-footer.astro";
import Navbar from "../components/nav-bar/navbar.astro";
import "@fontsource-variable/inter/index.css";
import { ViewTransitions } from "astro:transitions";
import CookieConsent from './CookieConsent.astro';
export interface Props {
	title: string;
  seo?: SEOProps;
}


const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();

const resolvedImageWithDomain = new URL(
	"/og.jpg",
	Astro.site,
).toString();

const { title, seo } = Astro.props;

const makeTitle = title
	? `${title} | Barcelona Experts`
	: "Barcelona Experts - Experience Barcelona like a local";
---
<!DOCTYPE html>
<html lang="en" class="scroll-smooth scroll-pt-[60px] md:scroll-pt-[72px]">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <script src="https://cdn.jsdelivr.net/gh/orestbida/cookieconsent@3.0.1/dist/cookieconsent.umd.js"></script>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <!-- <ImageSupportDetection /> -->

    <!-- <link rel="preload" as="image" href={src} alt="Hero" /> -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/gh/orestbida/cookieconsent@3.0.1/dist/cookieconsent.css"
    />
    <SEO
      {...seo}
      title={makeTitle}
      description="Pocket Barcelona - run by real people who live in Barcelona. We also have a very active chat group on Whatsapp which is free to join!"
      canonical={canonicalURL}
      openGraph={{
        basic: {
          url: canonicalURL,
          type: "website",
          title: `Pocket Barcelona - a website run by real Barcelona based experts`,
          image: resolvedImageWithDomain,
          ...seo?.openGraph?.basic ?? {},
        },
        image: {
          ...seo?.openGraph?.image ?? {},
          alt: "Barcelona Experts",
        },
      }}
    />
    <ViewTransitions fallback="swap" />
    <script
    is:inline
    src="https://www.googletagmanager.com/gtag/js?id=G-80HL5SXRY7"></script>

  <script>
    // We need a global definition to avoid type warnings
    declare global {
      interface Window {
        dataLayer: Record<string, any>[];
        gtag: (...args: any[]) => void;
      }
    }

    document.addEventListener("astro:page-load", () => {
      window.dataLayer = window.dataLayer || [];
      window.gtag = function gtag(...args: any[]) {
        window.dataLayer.push(arguments);
      };
      window.gtag("js", new Date());
      window.gtag("consent", "default", {
        ad_storage: "denied",
        ad_user_data: "denied",
        ad_personalization: "denied",
        analytics_storage: "denied",
      });
      window.gtag("config", "G-80HL5SXRY7");
    });

    // Initialize dataLayer
    window.dataLayer = window.dataLayer || [];

    // Define gtag function
    window.gtag = function gtag(...args: any[]) {
      window.dataLayer.push(arguments);
    };

    // Load GA4 with denied default consents
    window.gtag("js", new Date());
    window.gtag("consent", "default", {
      ad_storage: "denied",
      ad_user_data: "denied",
      ad_personalization: "denied",
      analytics_storage: "denied",
    });
    window.gtag("config", "G-80HL5SXRY7");
  </script>
  </head>
  
  <body class="pt-[60px] lg:pt-[72px]">
    <Navbar />
    <main id="main">
      <slot />
    </main>
    <Footer />
    <style is:global>
      /* Improve Page speed */
      /* https://css-tricks.com/almanac/properties/c/content-visibility/ */
      img {
        content-visibility: auto;
      }
    </style>
    <div transition:persist="find-me-on-the-other-side" id="cc-container">
      <CookieConsent />
      <script is:inline>
        // Restore the `show--consent` class if it was present before the page swap
        document.addEventListener("astro:before-preparation", event => {
          const htmlClassName = window.document.documentElement.className;
          const consentClassPresent = htmlClassName.includes("show--consent")
            ? true
            : false;
          window._showConsentClass = consentClassPresent;
        });
  
        document.addEventListener("astro:before-swap", event => {
          const showConsent = window._showConsentClass ? ` show--consent` : "";
          event.newDocument.documentElement.className += showConsent;
        });
      </script>
    </div>
  </body>
</html>
